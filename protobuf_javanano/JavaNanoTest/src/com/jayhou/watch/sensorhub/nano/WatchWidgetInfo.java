// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.jayhou.watch.sensorhub.nano;

@SuppressWarnings("hiding")
public interface WatchWidgetInfo {

  public static final class KlvpProtocol extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<KlvpProtocol> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            KlvpProtocol>(KlvpProtocol.class);

    private static volatile KlvpProtocol[] _emptyArray;
    public static KlvpProtocol[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new KlvpProtocol[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 type = 1;
    public int type;

    // required bytes stream = 2;
    public byte[] stream;

    // required bytes stream2 = 3;
    public byte[] stream2;

    public KlvpProtocol() {
      clear();
    }

    public KlvpProtocol clear() {
      type = 0;
      stream = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      stream2 = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.type);
      output.writeBytes(2, this.stream);
      output.writeBytes(3, this.stream2);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(2, this.stream);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(3, this.stream2);
      return size;
    }

    @Override
    public KlvpProtocol mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.type = input.readInt32();
            break;
          }
          case 18: {
            this.stream = input.readBytes();
            break;
          }
          case 26: {
            this.stream2 = input.readBytes();
            break;
          }
        }
      }
    }

    public static KlvpProtocol parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new KlvpProtocol(), data);
    }

    public static KlvpProtocol parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new KlvpProtocol().mergeFrom(input);
    }
  }

  public static final class QuarterCircleProgress extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<QuarterCircleProgress> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            QuarterCircleProgress>(QuarterCircleProgress.class);

    private static volatile QuarterCircleProgress[] _emptyArray;
    public static QuarterCircleProgress[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new QuarterCircleProgress[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 icon = 1;
    public int icon;

    // required string shortText = 2;
    public java.lang.String shortText;

    // required float progress = 3;
    public float progress;

    public QuarterCircleProgress() {
      clear();
    }

    public QuarterCircleProgress clear() {
      icon = 0;
      shortText = "";
      progress = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.icon);
      output.writeString(2, this.shortText);
      output.writeFloat(3, this.progress);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.icon);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.shortText);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(3, this.progress);
      return size;
    }

    @Override
    public QuarterCircleProgress mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.icon = input.readInt32();
            break;
          }
          case 18: {
            this.shortText = input.readString();
            break;
          }
          case 29: {
            this.progress = input.readFloat();
            break;
          }
        }
      }
    }

    public static QuarterCircleProgress parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new QuarterCircleProgress(), data);
    }

    public static QuarterCircleProgress parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new QuarterCircleProgress().mergeFrom(input);
    }
  }

  public static final class QuarterCircleStepProgress extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<QuarterCircleStepProgress> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            QuarterCircleStepProgress>(QuarterCircleStepProgress.class);

    private static volatile QuarterCircleStepProgress[] _emptyArray;
    public static QuarterCircleStepProgress[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new QuarterCircleStepProgress[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 dataType = 1;
    public int dataType;

    // required int32 icon = 2;
    public int icon;

    // required string shortText = 3;
    public java.lang.String shortText;

    // required float progress = 4;
    public float progress;

    // required int32 step = 5;
    public int step;

    public QuarterCircleStepProgress() {
      clear();
    }

    public QuarterCircleStepProgress clear() {
      dataType = 0;
      icon = 0;
      shortText = "";
      progress = 0F;
      step = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.dataType);
      output.writeInt32(2, this.icon);
      output.writeString(3, this.shortText);
      output.writeFloat(4, this.progress);
      output.writeInt32(5, this.step);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.dataType);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.icon);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(3, this.shortText);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(4, this.progress);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(5, this.step);
      return size;
    }

    @Override
    public QuarterCircleStepProgress mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.dataType = input.readInt32();
            break;
          }
          case 16: {
            this.icon = input.readInt32();
            break;
          }
          case 26: {
            this.shortText = input.readString();
            break;
          }
          case 37: {
            this.progress = input.readFloat();
            break;
          }
          case 40: {
            this.step = input.readInt32();
            break;
          }
        }
      }
    }

    public static QuarterCircleStepProgress parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new QuarterCircleStepProgress(), data);
    }

    public static QuarterCircleStepProgress parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new QuarterCircleStepProgress().mergeFrom(input);
    }
  }

  public static final class QuarterCircleText extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<QuarterCircleText> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            QuarterCircleText>(QuarterCircleText.class);

    private static volatile QuarterCircleText[] _emptyArray;
    public static QuarterCircleText[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new QuarterCircleText[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string shortText = 1;
    public java.lang.String shortText;

    public QuarterCircleText() {
      clear();
    }

    public QuarterCircleText clear() {
      shortText = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.shortText);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.shortText);
      return size;
    }

    @Override
    public QuarterCircleText mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.shortText = input.readString();
            break;
          }
        }
      }
    }

    public static QuarterCircleText parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new QuarterCircleText(), data);
    }

    public static QuarterCircleText parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new QuarterCircleText().mergeFrom(input);
    }
  }

  public static final class TinyCircleIcon extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<TinyCircleIcon> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            TinyCircleIcon>(TinyCircleIcon.class);

    private static volatile TinyCircleIcon[] _emptyArray;
    public static TinyCircleIcon[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TinyCircleIcon[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 icon = 1;
    public int icon;

    public TinyCircleIcon() {
      clear();
    }

    public TinyCircleIcon clear() {
      icon = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.icon);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.icon);
      return size;
    }

    @Override
    public TinyCircleIcon mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.icon = input.readInt32();
            break;
          }
        }
      }
    }

    public static TinyCircleIcon parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TinyCircleIcon(), data);
    }

    public static TinyCircleIcon parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TinyCircleIcon().mergeFrom(input);
    }
  }

  public static final class TinyCircleText extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<TinyCircleText> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            TinyCircleText>(TinyCircleText.class);

    private static volatile TinyCircleText[] _emptyArray;
    public static TinyCircleText[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TinyCircleText[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string shortText = 1;
    public java.lang.String shortText;

    public TinyCircleText() {
      clear();
    }

    public TinyCircleText clear() {
      shortText = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.shortText);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.shortText);
      return size;
    }

    @Override
    public TinyCircleText mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.shortText = input.readString();
            break;
          }
        }
      }
    }

    public static TinyCircleText parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TinyCircleText(), data);
    }

    public static TinyCircleText parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TinyCircleText().mergeFrom(input);
    }
  }

  public static final class TinyCircleIconWText extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<TinyCircleIconWText> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            TinyCircleIconWText>(TinyCircleIconWText.class);

    private static volatile TinyCircleIconWText[] _emptyArray;
    public static TinyCircleIconWText[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TinyCircleIconWText[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 icon = 1;
    public int icon;

    // required string shortText = 2;
    public java.lang.String shortText;

    public TinyCircleIconWText() {
      clear();
    }

    public TinyCircleIconWText clear() {
      icon = 0;
      shortText = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.icon);
      output.writeString(2, this.shortText);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.icon);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.shortText);
      return size;
    }

    @Override
    public TinyCircleIconWText mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.icon = input.readInt32();
            break;
          }
          case 18: {
            this.shortText = input.readString();
            break;
          }
        }
      }
    }

    public static TinyCircleIconWText parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TinyCircleIconWText(), data);
    }

    public static TinyCircleIconWText parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TinyCircleIconWText().mergeFrom(input);
    }
  }

  public static final class TinyCircleDText extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<TinyCircleDText> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            TinyCircleDText>(TinyCircleDText.class);

    private static volatile TinyCircleDText[] _emptyArray;
    public static TinyCircleDText[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TinyCircleDText[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated string multiLineMessage = 1;
    public java.lang.String[] multiLineMessage;

    public TinyCircleDText() {
      clear();
    }

    public TinyCircleDText clear() {
      multiLineMessage = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.multiLineMessage != null && this.multiLineMessage.length > 0) {
        for (int i = 0; i < this.multiLineMessage.length; i++) {
          java.lang.String element = this.multiLineMessage[i];
          if (element != null) {
            output.writeString(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.multiLineMessage != null && this.multiLineMessage.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.multiLineMessage.length; i++) {
          java.lang.String element = this.multiLineMessage[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public TinyCircleDText mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.multiLineMessage == null ? 0 : this.multiLineMessage.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.multiLineMessage, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.multiLineMessage = newArray;
            break;
          }
        }
      }
    }

    public static TinyCircleDText parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TinyCircleDText(), data);
    }

    public static TinyCircleDText parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TinyCircleDText().mergeFrom(input);
    }
  }

  public static final class RoundRectCirleWText extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<RoundRectCirleWText> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            RoundRectCirleWText>(RoundRectCirleWText.class);

    private static volatile RoundRectCirleWText[] _emptyArray;
    public static RoundRectCirleWText[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RoundRectCirleWText[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 icon = 1;
    public int icon;

    // required string shortText = 2;
    public java.lang.String shortText;

    // required float progress = 3;
    public float progress;

    public RoundRectCirleWText() {
      clear();
    }

    public RoundRectCirleWText clear() {
      icon = 0;
      shortText = "";
      progress = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.icon);
      output.writeString(2, this.shortText);
      output.writeFloat(3, this.progress);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.icon);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.shortText);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(3, this.progress);
      return size;
    }

    @Override
    public RoundRectCirleWText mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.icon = input.readInt32();
            break;
          }
          case 18: {
            this.shortText = input.readString();
            break;
          }
          case 29: {
            this.progress = input.readFloat();
            break;
          }
        }
      }
    }

    public static RoundRectCirleWText parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RoundRectCirleWText(), data);
    }

    public static RoundRectCirleWText parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RoundRectCirleWText().mergeFrom(input);
    }
  }

  public static final class RoundRectTextOnly extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<RoundRectTextOnly> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            RoundRectTextOnly>(RoundRectTextOnly.class);

    private static volatile RoundRectTextOnly[] _emptyArray;
    public static RoundRectTextOnly[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RoundRectTextOnly[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string longText = 1;
    public java.lang.String longText;

    public RoundRectTextOnly() {
      clear();
    }

    public RoundRectTextOnly clear() {
      longText = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.longText);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.longText);
      return size;
    }

    @Override
    public RoundRectTextOnly mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.longText = input.readString();
            break;
          }
        }
      }
    }

    public static RoundRectTextOnly parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RoundRectTextOnly(), data);
    }

    public static RoundRectTextOnly parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RoundRectTextOnly().mergeFrom(input);
    }
  }

  public static final class SingleLineText extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<SingleLineText> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            SingleLineText>(SingleLineText.class);

    private static volatile SingleLineText[] _emptyArray;
    public static SingleLineText[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SingleLineText[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string shortText = 1;
    public java.lang.String shortText;

    public SingleLineText() {
      clear();
    }

    public SingleLineText clear() {
      shortText = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.shortText);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.shortText);
      return size;
    }

    @Override
    public SingleLineText mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.shortText = input.readString();
            break;
          }
        }
      }
    }

    public static SingleLineText parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SingleLineText(), data);
    }

    public static SingleLineText parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SingleLineText().mergeFrom(input);
    }
  }

  public static final class MultiLineText extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<MultiLineText> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            MultiLineText>(MultiLineText.class);

    private static volatile MultiLineText[] _emptyArray;
    public static MultiLineText[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MultiLineText[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated string multiLineMessage = 1;
    public java.lang.String[] multiLineMessage;

    public MultiLineText() {
      clear();
    }

    public MultiLineText clear() {
      multiLineMessage = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.multiLineMessage != null && this.multiLineMessage.length > 0) {
        for (int i = 0; i < this.multiLineMessage.length; i++) {
          java.lang.String element = this.multiLineMessage[i];
          if (element != null) {
            output.writeString(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.multiLineMessage != null && this.multiLineMessage.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.multiLineMessage.length; i++) {
          java.lang.String element = this.multiLineMessage[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public MultiLineText mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.multiLineMessage == null ? 0 : this.multiLineMessage.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.multiLineMessage, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.multiLineMessage = newArray;
            break;
          }
        }
      }
    }

    public static MultiLineText parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MultiLineText(), data);
    }

    public static MultiLineText parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MultiLineText().mergeFrom(input);
    }
  }

  public static final class ImageText extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<ImageText> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            ImageText>(ImageText.class);

    private static volatile ImageText[] _emptyArray;
    public static ImageText[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ImageText[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated uint32 imageAddr = 1;
    public int[] imageAddr;

    public ImageText() {
      clear();
    }

    public ImageText clear() {
      imageAddr = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.imageAddr != null && this.imageAddr.length > 0) {
        for (int i = 0; i < this.imageAddr.length; i++) {
          output.writeUInt32(1, this.imageAddr[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.imageAddr != null && this.imageAddr.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.imageAddr.length; i++) {
          int element = this.imageAddr[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.imageAddr.length;
      }
      return size;
    }

    @Override
    public ImageText mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.imageAddr == null ? 0 : this.imageAddr.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.imageAddr, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt32();
            this.imageAddr = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.imageAddr == null ? 0 : this.imageAddr.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.imageAddr, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt32();
            }
            this.imageAddr = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static ImageText parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ImageText(), data);
    }

    public static ImageText parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ImageText().mergeFrom(input);
    }
  }

  public static final class QuarterCircleProgresses extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<QuarterCircleProgresses> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            QuarterCircleProgresses>(QuarterCircleProgresses.class);

    private static volatile QuarterCircleProgresses[] _emptyArray;
    public static QuarterCircleProgresses[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new QuarterCircleProgresses[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .QuarterCircleProgress circleProgresses = 1;
    public com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleProgress[] circleProgresses;

    public QuarterCircleProgresses() {
      clear();
    }

    public QuarterCircleProgresses clear() {
      circleProgresses = com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleProgress.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.circleProgresses != null && this.circleProgresses.length > 0) {
        for (int i = 0; i < this.circleProgresses.length; i++) {
          com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleProgress element = this.circleProgresses[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.circleProgresses != null && this.circleProgresses.length > 0) {
        for (int i = 0; i < this.circleProgresses.length; i++) {
          com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleProgress element = this.circleProgresses[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public QuarterCircleProgresses mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.circleProgresses == null ? 0 : this.circleProgresses.length;
            com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleProgress[] newArray =
                new com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleProgress[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.circleProgresses, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleProgress();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleProgress();
            input.readMessage(newArray[i]);
            this.circleProgresses = newArray;
            break;
          }
        }
      }
    }

    public static QuarterCircleProgresses parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new QuarterCircleProgresses(), data);
    }

    public static QuarterCircleProgresses parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new QuarterCircleProgresses().mergeFrom(input);
    }
  }

  public static final class QuarterCircleTexts extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<QuarterCircleTexts> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            QuarterCircleTexts>(QuarterCircleTexts.class);

    private static volatile QuarterCircleTexts[] _emptyArray;
    public static QuarterCircleTexts[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new QuarterCircleTexts[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .QuarterCircleText circleTexts = 1;
    public com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleText[] circleTexts;

    public QuarterCircleTexts() {
      clear();
    }

    public QuarterCircleTexts clear() {
      circleTexts = com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleText.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.circleTexts != null && this.circleTexts.length > 0) {
        for (int i = 0; i < this.circleTexts.length; i++) {
          com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleText element = this.circleTexts[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.circleTexts != null && this.circleTexts.length > 0) {
        for (int i = 0; i < this.circleTexts.length; i++) {
          com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleText element = this.circleTexts[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public QuarterCircleTexts mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.circleTexts == null ? 0 : this.circleTexts.length;
            com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleText[] newArray =
                new com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleText[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.circleTexts, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleText();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleText();
            input.readMessage(newArray[i]);
            this.circleTexts = newArray;
            break;
          }
        }
      }
    }

    public static QuarterCircleTexts parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new QuarterCircleTexts(), data);
    }

    public static QuarterCircleTexts parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new QuarterCircleTexts().mergeFrom(input);
    }
  }

  public static final class WatchFaceInfo extends
      com.google.protobuf.nano.android.ParcelableMessageNano {

    // Used by Parcelable
    @SuppressWarnings({"unused"})
    public static final android.os.Parcelable.Creator<WatchFaceInfo> CREATOR =
        new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
            WatchFaceInfo>(WatchFaceInfo.class);

    private static volatile WatchFaceInfo[] _emptyArray;
    public static WatchFaceInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new WatchFaceInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .QuarterCircleStepProgress circleStepProgresses = 1;
    public com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleStepProgress[] circleStepProgresses;

    public WatchFaceInfo() {
      clear();
    }

    public WatchFaceInfo clear() {
      circleStepProgresses = com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleStepProgress.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.circleStepProgresses != null && this.circleStepProgresses.length > 0) {
        for (int i = 0; i < this.circleStepProgresses.length; i++) {
          com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleStepProgress element = this.circleStepProgresses[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.circleStepProgresses != null && this.circleStepProgresses.length > 0) {
        for (int i = 0; i < this.circleStepProgresses.length; i++) {
          com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleStepProgress element = this.circleStepProgresses[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public WatchFaceInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.circleStepProgresses == null ? 0 : this.circleStepProgresses.length;
            com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleStepProgress[] newArray =
                new com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleStepProgress[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.circleStepProgresses, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleStepProgress();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.jayhou.watch.sensorhub.nano.WatchWidgetInfo.QuarterCircleStepProgress();
            input.readMessage(newArray[i]);
            this.circleStepProgresses = newArray;
            break;
          }
        }
      }
    }

    public static WatchFaceInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new WatchFaceInfo(), data);
    }

    public static WatchFaceInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new WatchFaceInfo().mergeFrom(input);
    }
  }
}
